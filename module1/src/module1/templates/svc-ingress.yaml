apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: module1-ingress
  {{/*  annotations:*/}}
  {{/*    external-dns.alpha.kubernetes.io/hostname: app1.liberaalgeluid.nl*/}}
  {{/*    kubernetes.io/ingress.class: alb*/}}
  {{/*    # required to use ClusterIP*/}}
  {{/*    alb.ingress.kubernetes.io/target-type: ip*/}}
  {{/*    # required to place on public-subnet*/}}
  {{/*    alb.ingress.kubernetes.io/scheme: internet-facing*/}}
  {{/*    */}}{{/*    # use TLS registered to our domain, ALB will terminate the certificate*/}}
  {{/*    */}}{{/*    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:XXXXXXXXXXXX:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx*/}}
  {{/*    # respond to both ports*/}}
  {{/*    */}}{{/*    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'*/}}
  {{/*    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTP": 81}]'*/}}
  {{/*    # redirect to port 80 to port 443*/}}
  {{/*  */}}{{/*    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'*/}}

  labels:
    app: module1
spec:
  rules:
    - host: app1.liberaalgeluid.nl
      http:
        paths:
          - path: /*
            backend:
              serviceName: module1
              servicePort: 8080
    - http:
        paths:
          - path: /*
            backend:
              serviceName: module1
              servicePort: 8080
